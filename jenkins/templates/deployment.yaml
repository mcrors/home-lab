---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployment.name }}
  namespace: {{ .Values.namespace.name }}
  labels:
    app: {{ .Values.deployment.app.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.deployment.app.name }}
  template:
    metadata:
      name: {{ .Values.deployment.spec.name }}
      labels:
        app: {{ .Values.deployment.app.name }}
    spec:
      securityContext:
            fsGroup: 1000
            runAsUser: 1000
      serviceAccountName: {{ .Values.serviceAccount.name }}
      containers:
        - name: jenkins
          image: jenkins/jenkins:lts
          resources:
            limits:
              memory: {{ .Values.deployment.container.resources.limits.memory }}
              cpu: {{ .Values.deployment.container.resources.limits.cpu }}
            requests:
              memory: {{ .Values.deployment.container.resources.requests.memory }}
              cpu: {{ .Values.deployment.container.resources.requests.cpu }}
          ports:
            - name: httpport
              containerPort: 8080
            - name: jnlpport
              containerPort: 50000
          # livenessProbe:
            # httpGet:
              # path: "/login"
              # port: 8080
            # initialDelaySeconds: 300
            # periodSeconds: 10
            # timeoutSeconds: 5
            # failureThreshold: 5
          # readinessProbe:
            # httpGet:
              # path: "/login"
              # port: 8080
            # initialDelaySeconds: 200
            # periodSeconds: 10
            # timeoutSeconds: 5
            # failureThreshold: 3
          volumeMounts:
            - name: jenkins-data
              mountPath: /var/jenkins_home
      volumes:
        - name: jenkins-data
          persistentVolumeClaim:
              claimName: {{ .Values.volume.pvc.name }}
